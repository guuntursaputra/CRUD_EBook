<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Dashboard</title>
    <style>
        /* Reset and styling */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: Arial, sans-serif;
        }

        body {
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            background-color: #eef1f6;
            color: #333;
        }

        /* Navbar styling */
        .navbar {
            width: 100%;
            background-color: #2c3e50;
            color: #fff;
            padding: 15px 30px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            position: fixed;
            top: 0;
            left: 0;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            z-index: 1000;
        }

        .navbar h1,
        .navbar p {
            margin: 0;
            color: #ecf0f1;
        }

        .navbar-left {
            display: flex;
            flex-direction: column;
        }

        .navbar-right .logout {
            background-color: #e74c3c;
            padding: 10px 20px;
            border-radius: 5px;
            color: #fff;
            text-decoration: none;
            font-weight: bold;
            transition: background-color 0.3s;
        }

        .navbar-right .logout:hover {
            background-color: #c0392b;
        }

        .container {
            max-width: 900px;
            width: 100%;
            padding: 30px;
            background-color: #ffffff;
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
            border-radius: 10px;
        }

        h1,
        h2 {
            color: #333;
            font-weight: 600;
            margin-bottom: 16px;
        }

        p {
            color: #555;
            margin-bottom: 20px;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
            background-color: #fafafa;
        }

        table,
        th,
        td {
            border: 1px solid #ddd;
        }

        th,
        td {
            padding: 12px;
            text-align: left;
            color: #555;
        }

        th {
            background-color: #f3f6fa;
            font-weight: bold;
        }

        tr:nth-child(even) {
            background-color: #f9f9f9;
        }

        /* Modal styles */
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            justify-content: center;
            align-items: center;
            z-index: 1000;
        }

        .modal-content {
            background: #ffffff;
            padding: 30px;
            border-radius: 10px;
            max-width: 500px;
            width: 90%;
            text-align: left;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
        }

        .modal-content h2 {
            font-size: 1.5em;
            margin-bottom: 20px;
        }

        .modal-content input {
            width: 100%;
            padding: 12px;
            margin: 8px 0;
            border: 1px solid #ddd;
            border-radius: 5px;
            font-size: 1em;
        }

        .modal-content button {
            padding: 10px 20px;
            margin-top: 12px;
            background-color: #4caf50;
            color: #ffffff;
            border: none;
            border-radius: 5px;
            font-size: 1em;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        .modal-content button:hover {
            background-color: #45a049;
        }

        .close-btn {
            background-color: #e74c3c;
            color: #ffffff;
            border: none;
            padding: 8px 12px;
            border-radius: 5px;
            cursor: pointer;
            position: absolute;
            top: 15px;
            right: 15px;
            font-size: 1em;
        }

        .close-btn:hover {
            background-color: #c0392b;
        }

        /* Other button styles */
        a.logout,
        .btn-add,
        .btn-action {
            display: inline-block;
            padding: 10px 20px;
            border-radius: 5px;
            text-decoration: none;
            color: #ffffff;
            font-weight: bold;
            font-size: 0.9em;
            cursor: pointer;
            transition: background-color 0.3s ease;
            margin: 8px 0;
        }

        .logout {
            background-color: #34495e;
        }

        .logout:hover {
            background-color: #2c3e50;
        }

        /* Add/Edit/Delete button styles */
        .btn-add {
            background-color: #27ae60;
        }

        .btn-add:hover {
            background-color: #219150;
        }

        .btn-edit {
            background-color: #f39c12;
        }

        .btn-edit:hover {
            background-color: #e67e22;
        }

        .btn-delete {
            background-color: #e74c3c;
        }

        .btn-delete:hover {
            background-color: #c0392b;
        }
    </style>
</head>

<body>
    <nav class="navbar">
        <div class="navbar-left">
            <h1>Welcome, <%= user.name %>!</h1>
            <p>Email: <%= user.email %>
            </p>
        </div>
        <div class="navbar-right">
            <a href="/logout" class="logout">Logout</a>
        </div>
    </nav>

    <div class="container">
        <h2>Book List</h2>
        <a href="#" class="btn-add" onclick="openModal('addModal')">Add New Book</a>
        <table>
            <tr>
                <th>Title</th>
                <th>Content</th>
                <th>Author</th>
                <th>Pages</th>
                <th>Actions</th>
            </tr>
            <% books.forEach(book=> { %>
                <tr>
                    <td>
                        <%= book.title %>
                    </td>
                    <td>
                        <%= book.content %>
                    </td>
                    <td>
                        <%= book.author %>
                    </td>
                    <td>
                        <%= book.pages %>
                    </td>
                    <td>
                        <a href="#" class="btn-action btn-edit"
                            onclick="openModal('editModal', '<%= book._id %>', '<%= book.title %>', '<%= book.author %>', '<%= book.pages %>')">Edit</a>
                        <a href="#" class="btn-action btn-delete"
                            onclick="openModal('deleteModal', '<%= book._id %>')">Delete</a>
                    </td>
                </tr>
                <% }) %>
        </table>
    </div>

    <!-- Add Book Modal -->
    <div class="modal" id="addModal">
        <div class="modal-content">
            <button class="close-btn" onclick="closeModal('addModal')">X</button>
            <h2>Add New Book</h2>
            <form action="/book" method="POST">
                <input type="text" name="title" placeholder="Title" required />
                <input type="text" name="content" placeholder="Content" required />
                <input type="text" name="author" placeholder="Author" required />
                <input type="text" name="pages" placeholder="Pages" required />
                <button type="submit">Add Book</button>
            </form>
        </div>
    </div>

    <!-- Edit Book Modal -->
    <div class="modal" id="editModal">
        <div class="modal-content">
            <button class="close-btn" onclick="closeModal('editModal')">X</button>
            <h2>Edit Book</h2>
            <form id="editForm" action="" method="POST" onsubmit="event.preventDefault(); updateBook()">
                <input type="text" id="editTitle" name="title" required />
                <input type="text" name="editContent" placeholder="Content" required />
                <input type="text" id="editAuthor" name="author" required />
                <input type="text" id="editPages" name="pages" required />
                <button type="submit">Save Changes</button>
            </form>
        </div>
    </div>

    <!-- Delete Book Modal -->
    <div class="modal" id="deleteModal">
        <div class="modal-content">
            <button class="close-btn" onclick="closeModal('deleteModal')">X</button>
            <h2>Are you sure you want to delete this book?</h2>
            <form id="deleteForm" action="" method="POST" onsubmit="event.preventDefault(); deleteBook()">
                <button type="submit" style="background-color: #e74c3c; color: #fff">
                    Delete
                </button>
            </form>
        </div>
    </div>

    <script>
        function openModal(
            modalId,
            id = "",
            title = "",
            author = "",
            pages = ""
        ) {
            document.getElementById(modalId).style.display = "flex";

            if (modalId === "editModal") {
                document.getElementById("editForm").action = `/book/${id}`;
                document.getElementById("editTitle").value = title;
                document.getElementById("editContent").value = content;
                document.getElementById("editAuthor").value = author;
                document.getElementById("editPages").value = pages;
            }

            if (modalId === "deleteModal") {
                document.getElementById("deleteForm").action = `/book/${id}`;
            }
        }

        function closeModal(modalId) {
            document.getElementById(modalId).style.display = "none";
        }

        function updateBook() {
            const form = document.getElementById("editForm");
            const actionUrl = form.action;
            const formData = new FormData(form);

            fetch(actionUrl, {
                method: "PUT",
                body: JSON.stringify(Object.fromEntries(formData)),
                headers: { "Content-Type": "application/json" },
            })
                .then((response) => response.json())
                .then((data) => {
                    closeModal("editModal");
                    window.location.reload();
                });
        }

        function deleteBook() {
            const form = document.getElementById("deleteForm");
            const actionUrl = form.action;

            fetch(actionUrl, {
                method: "DELETE",
            })
                .then((response) => response.json())
                .then((data) => {
                    closeModal("deleteModal");
                    window.location.reload();
                });
        }
    </script>
</body>

</html>